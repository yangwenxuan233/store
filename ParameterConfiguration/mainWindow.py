# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'DZ.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os
import sys

from PyQt5 import QtCore, QtWidgets
from PyQt5.QtWidgets import QHeaderView, QTableWidgetItem

from config.ParameterSettings import ParameterSettings
from libs.BinFile import BinFile
from libs.DataBase import DataBaseOptions
from options.AdcCollect import AdcCollect
from options.EnergyDetection import EnergyDetection
from options.InputFile import InputFile
from options.OutputFile import OutputFile
from options.PrecisionDetection import PrecisionDetection
from options.ReadParameter import ReadParameter
from options.SetParameter import SetParameter
from options.UpdateBin import UpdateBin

sys.path.append(os.path.dirname(os.path.dirname(__file__)))


class Ui_Form(object):
    # 设置GUI界面
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(750, 945)
        # 表格属性
        self.tableWidget = QtWidgets.QTableWidget(Form)
        self.tableWidget.setGeometry(QtCore.QRect(10, 20, 520, 807))
        self.tableWidget.horizontalHeader().setSectionResizeMode(QHeaderView.Stretch)
        self.tableWidget.setObjectName("tableWidget")
        # 行列数
        self.tableWidget.setRowCount(60)
        self.tableWidget.setColumnCount(2)
        # 表头
        self.tableWidget.setHorizontalHeaderLabels(['名称', '参数'])
        # 读取参数名称
        name = []
        for i in ParameterSettings.base_parameter:
            if i.startswith('null'):
                pass
            else:
                name.append(i)
        # 写入参数名称
        for i in range(50):
            newItem = QTableWidgetItem(name[i])
            self.tableWidget.setItem(i, 0, newItem)

        # 按键1设置
        self.pushButton_1 = QtWidgets.QPushButton(Form)
        self.pushButton_1.setGeometry(QtCore.QRect(540, 20, 200, 30))
        self.pushButton_1.setObjectName("pushButton")

        # 按键2设置
        self.pushButton_2 = QtWidgets.QPushButton(Form)
        self.pushButton_2.setGeometry(QtCore.QRect(540, 60, 200, 30))
        self.pushButton_2.setObjectName("pushButton_2")

        # 按键3设置
        self.pushButton_3 = QtWidgets.QPushButton(Form)
        self.pushButton_3.setGeometry(QtCore.QRect(540, 100, 200, 30))
        self.pushButton_3.setObjectName("pushButton_3")

        # 按键4设置
        self.pushButton_4 = QtWidgets.QPushButton(Form)
        self.pushButton_4.setGeometry(QtCore.QRect(540, 140, 200, 30))
        self.pushButton_4.setObjectName("pushButton_4")

        # 按键5设置
        self.pushButton_5 = QtWidgets.QPushButton(Form)
        self.pushButton_5.setGeometry(QtCore.QRect(540, 180, 200, 30))
        self.pushButton_5.setObjectName("pushButton_5")

        # 按键6设置
        self.pushButton_6 = QtWidgets.QPushButton(Form)
        self.pushButton_6.setGeometry(QtCore.QRect(540, 220, 200, 30))
        self.pushButton_6.setObjectName("pushButton_6")

        # 按键7设置
        self.pushButton_7 = QtWidgets.QPushButton(Form)
        self.pushButton_7.setGeometry(QtCore.QRect(540, 260, 200, 30))
        self.pushButton_7.setObjectName("pushButton_7")

        # 按键8设置
        self.pushButton_8 = QtWidgets.QPushButton(Form)
        self.pushButton_8.setGeometry(QtCore.QRect(540, 300, 200, 30))
        self.pushButton_8.setObjectName("pushButton_8")

        # 提示框设置
        self.textEdit = QtWidgets.QTextEdit(Form)
        self.textEdit.setGeometry(QtCore.QRect(10, 835, 730, 100))
        self.textEdit.setObjectName("textEdit")
        self.textEdit.setFontPointSize(9)

        # 参数连接
        self.retranslateUi(Form)
        self.Button_1(Form)
        self.Button_2(Form)
        self.Button_3(Form)
        self.Button_4(Form)
        self.Button_5(Form)
        self.Button_6(Form)
        self.Button_7(Form)
        self.Button_8(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    # 读取参数 按键1连接
    def Button_1(self, Form):
        _translate = QtCore.QCoreApplication.translate
        self.pushButton_1.setText(_translate("Form", "读取参数"))
        self.pushButton_1.clicked.connect(self.read_parameter)

    def read_parameter(self):
        try:
            readed_data = ReadParameter.read_parameter()
        except Exception as e:
            self.textEdit.append("<font color='red' size='5'><green>参数读取失败。" + str(e) + "</font>")

        # 存入数据库
        try:
            status = DataBaseOptions.insert_data(list(readed_data), readed_data[20])
            self.textEdit.append(status)
        except Exception as e:
            print(str(e))

        if type(readed_data) is not str:
            try:
                # 显示数据
                for i in range(len(readed_data)):
                    newItem = QTableWidgetItem(readed_data[i])
                    self.tableWidget.setItem(i, 1, newItem)
                self.textEdit.append("<font color='green' size='5'><green>读取参数成功。</font>")
            except Exception as e:
                self.textEdit.append("<font color='red' size='5'><green>读取显示失败。" + str(e) + "</font>")
        else:
            self.textEdit.append(readed_data)

    # 配置参数 按键2连接
    def Button_2(self, Form):
        _translate = QtCore.QCoreApplication.translate
        self.pushButton_2.setText(_translate("Form", "配置参数"))
        self.pushButton_2.clicked.connect(self.set_parameter)

    def set_parameter(self):
        # 获取界面输入数据
        try:
            list = []
            for i in range(50):
                item = self.tableWidget.item(i, 1).text()
                list.append(item)
        except Exception as e:
            list = []
            self.textEdit.append("<font color='red' size='5'><red>参数配置失败！" + str(e) + "</font>")
        status = SetParameter.set_parameter(list)
        self.textEdit.append(status)

    # 导入文件 按键3连接
    def Button_3(self, Form):
        _translate = QtCore.QCoreApplication.translate
        self.pushButton_3.setText(_translate("Form", "导入文件"))
        self.pushButton_3.clicked.connect(self.input_file)

    def input_file(self):
        list = []
        status = InputFile.input_file(list)
        # 显示数据
        if status is not str:
            for i in range(49):
                newItem = QTableWidgetItem(status[i])
                self.tableWidget.setItem(i, 1, newItem)
            self.textEdit.append("<font color='green' size='5'><green>导入文件完成。</font>")
        elif status == []:
            self.textEdit.append("<font color='red' size='5'><red>文件为空，请保存参数！</font>")
        else:
            self.textEdit.append(status)

    # 导出文件 按键4连接
    def Button_4(self, Form):
        _translate = QtCore.QCoreApplication.translate
        self.pushButton_4.setText(_translate("Form", "导出文件"))
        self.pushButton_4.clicked.connect(self.output_file)

    def output_file(self):
        try:
            list = []
            for i in range(49):
                item = self.tableWidget.item(i, 1).text()
                list.append(item)
        except Exception as e:
            list = []
            self.textEdit.append("<font color='red' size='5'><red>参数为空，请输入参数！" + str(e) + "</font>")
        status = OutputFile.output_file(list)
        self.textEdit.append(status)

    # 程序更新 按键5连接
    def Button_5(self, Form):
        _translate = QtCore.QCoreApplication.translate
        self.pushButton_5.setText(_translate("Form", "程序更新"))
        self.pushButton_5.clicked.connect(self.update_bin)

    def update_bin(self):
        try:
            binfile, Size, size, c = BinFile.read_bin()
            self.textEdit.append("<font color='blue' size='5'><blue>开始下载...</font>" + '\n')
        except Exception as e:
            self.textEdit.append("<font color='blue' size='5'><red>bin文件读取失败!" + str(e) + "</font>")
            return
        status = UpdateBin.update_bin(binfile, Size, size, c)
        self.textEdit.append(status)

    # 波形采集 按键6连接
    def Button_6(self, Form):
        _translate = QtCore.QCoreApplication.translate
        self.pushButton_6.setText(_translate("Form", "波形采集"))
        self.pushButton_6.clicked.connect(self.adc_collect)

    def adc_collect(self):
        status = AdcCollect.adc_collect()
        self.textEdit.append(status)

    # 精度检测 按键7连接
    def Button_7(self, Form):
        _translate = QtCore.QCoreApplication.translate
        self.pushButton_7.setText(_translate("Form", "精度检测"))
        self.pushButton_7.clicked.connect(self.precision_detection)

    def precision_detection(self):
        status = PrecisionDetection.precision_detection()
        self.textEdit.append(status)

    # 能量检测 按键8连接
    def Button_8(self, Form):
        _translate = QtCore.QCoreApplication.translate
        self.pushButton_8.setText(_translate("Form", "能量检测"))
        self.pushButton_8.clicked.connect(self.energy_detection)

    def energy_detection(self):
        status = EnergyDetection.energy_detection()
        self.textEdit.append(status)

    # GUI界面命名
    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "ParameterConfigurationGUI"))
